{"version":3,"file":"co2.js","sources":["../node_modules/@tgwf/co2/dist/esm/1byte.js","../node_modules/@tgwf/co2/dist/esm/constants/file-size.js","../node_modules/@tgwf/co2/dist/esm/data/average-intensities.min.js","../node_modules/@tgwf/co2/dist/esm/constants/index.js","../node_modules/@tgwf/co2/dist/esm/helpers/index.js","../node_modules/@tgwf/co2/dist/esm/sustainable-web-design.js","../node_modules/@tgwf/co2/dist/esm/co2.js","../node_modules/@tgwf/co2/dist/esm/hosting-json.js","../node_modules/@tgwf/co2/dist/esm/hosting-api.js","../node_modules/@tgwf/co2/dist/esm/hosting.js","../src/co2.js"],"sourcesContent":["const CO2_PER_KWH_IN_DC_GREY = 519;\nconst CO2_PER_KWH_NETWORK_GREY = 475;\nconst CO2_PER_KWH_IN_DC_GREEN = 0;\nconst KWH_PER_BYTE_IN_DC = 72e-12;\nconst FIXED_NETWORK_WIRED = 429e-12;\nconst FIXED_NETWORK_WIFI = 152e-12;\nconst FOUR_G_MOBILE = 884e-12;\nconst KWH_PER_BYTE_FOR_NETWORK = (FIXED_NETWORK_WIRED + FIXED_NETWORK_WIFI + FOUR_G_MOBILE) / 3;\nconst KWH_PER_BYTE_FOR_DEVICES = 13e-11;\nclass OneByte {\n  constructor(options) {\n    this.options = options;\n    this.KWH_PER_BYTE_FOR_NETWORK = KWH_PER_BYTE_FOR_NETWORK;\n  }\n  perByte(bytes, green) {\n    if (bytes < 1) {\n      return 0;\n    }\n    if (green) {\n      const Co2ForDC = bytes * KWH_PER_BYTE_IN_DC * CO2_PER_KWH_IN_DC_GREEN;\n      const Co2forNetwork = bytes * KWH_PER_BYTE_FOR_NETWORK * CO2_PER_KWH_NETWORK_GREY;\n      return Co2ForDC + Co2forNetwork;\n    }\n    const KwHPerByte = KWH_PER_BYTE_IN_DC + KWH_PER_BYTE_FOR_NETWORK;\n    return bytes * KwHPerByte * CO2_PER_KWH_IN_DC_GREY;\n  }\n}\nvar byte_default = OneByte;\nexport {\n  OneByte,\n  byte_default as default\n};\n","const GIGABYTE = 1e3 * 1e3 * 1e3;\nvar file_size_default = {\n  GIGABYTE\n};\nexport {\n  file_size_default as default\n};\n","const data = { \"AFG\": 132.53, \"AFRICA\": 559.42, \"ALB\": 24.29, \"DZA\": 634.61, \"ASM\": 611.11, \"AGO\": 174.73, \"ATG\": 611.11, \"ARG\": 394.62, \"ARM\": 264.54, \"ABW\": 561.22, \"ASEAN\": 554.5, \"ASIA\": 591.19, \"AUS\": 570.35, \"AUT\": 110.81, \"AZE\": 671.39, \"BHS\": 660.1, \"BHR\": 904.62, \"BGD\": 678.11, \"BRB\": 605.51, \"BLR\": 441.74, \"BEL\": 138.11, \"BLZ\": 225.81, \"BEN\": 584.07, \"BTN\": 23.33, \"BOL\": 489.14, \"BIH\": 600, \"BWA\": 847.91, \"BRA\": 105.51, \"BRN\": 893.91, \"BGR\": 335.33, \"BFA\": 467.53, \"BDI\": 250, \"CPV\": 558.14, \"KHM\": 417.71, \"CMR\": 305.42, \"CAN\": 161.43, \"CYM\": 642.86, \"CAF\": 0, \"TCD\": 628.57, \"CHL\": 353.52, \"CHN\": 585.82, \"COL\": 214.88, \"COM\": 642.86, \"COG\": 700, \"COD\": 24.46, \"COK\": 250, \"CRI\": 26.46, \"CIV\": 393.89, \"HRV\": 204.96, \"CUB\": 637.61, \"CYP\": 534.32, \"CZE\": 449.72, \"DNK\": 151.65, \"DJI\": 692.31, \"DMA\": 529.41, \"DOM\": 580.78, \"ECU\": 150.69, \"EGY\": 570.13, \"SLV\": 116.54, \"GNQ\": 591.84, \"ERI\": 631.58, \"EST\": 416.67, \"SWZ\": 172.41, \"ETH\": 24.64, \"EU\": 243.83, \"EUROPE\": 327.69, \"FLK\": 500, \"FRO\": 404.76, \"FJI\": 288.46, \"FIN\": 79.16, \"FRA\": 56.04, \"GUF\": 217.82, \"PYF\": 442.86, \"G20\": 482.92, \"G7\": 361.52, \"GAB\": 491.6, \"GMB\": 666.67, \"GEO\": 167.02, \"DEU\": 380.95, \"GHA\": 484, \"GRC\": 336.57, \"GRL\": 178.57, \"GRD\": 640, \"GLP\": 500, \"GUM\": 622.86, \"GTM\": 328.27, \"GIN\": 236.84, \"GNB\": 625, \"GUY\": 640.35, \"HTI\": 567.31, \"HND\": 282.27, \"HKG\": 699.5, \"HUN\": 204.19, \"ISL\": 27.68, \"IND\": 705.13, \"IDN\": 675.93, \"IRN\": 665.15, \"IRQ\": 688.81, \"IRL\": 290.81, \"ISR\": 582.93, \"ITA\": 330.72, \"JAM\": 555.56, \"JPN\": 512.81, \"JOR\": 540.92, \"KAZ\": 830.41, \"KEN\": 83.33, \"KIR\": 666.67, \"XKX\": 894.65, \"KWT\": 649.2, \"KGZ\": 147.29, \"LAO\": 265.51, \"LATIN AMERICA AND CARIBBEAN\": 260.28, \"LVA\": 123.2, \"LBN\": 599.01, \"LSO\": 20, \"LBR\": 227.85, \"LBY\": 818.69, \"LTU\": 160.07, \"LUX\": 105.26, \"MAC\": 448.98, \"MDG\": 436.44, \"MWI\": 66.67, \"MYS\": 605.83, \"MDV\": 611.77, \"MLI\": 408, \"MLT\": 459.14, \"MTQ\": 523.18, \"MRT\": 464.71, \"MUS\": 632.48, \"MEX\": 475.36, \"MIDDLE EAST\": 660.46, \"MDA\": 648.5, \"MNG\": 771.8, \"MNE\": 417.07, \"MSR\": 1e3, \"MAR\": 662.64, \"MOZ\": 135.65, \"MMR\": 483.57, \"NAM\": 59.26, \"NRU\": 750, \"NPL\": 24.44, \"NLD\": 267.62, \"NCL\": 660.58, \"NZL\": 110.89, \"NIC\": 265.12, \"NER\": 670.89, \"NGA\": 516.23, \"NORTH AMERICA\": 356.01, \"PRK\": 389.59, \"MKD\": 565.35, \"NOR\": 30.08, \"OCEANIA\": 507.63, \"OECD\": 360.53, \"OMN\": 564.69, \"PAK\": 463.66, \"PSE\": 516.13, \"PAN\": 161.68, \"PNG\": 507.25, \"PRY\": 24.31, \"PER\": 251.74, \"POL\": 661.93, \"PRT\": 165.55, \"PRI\": 678.74, \"QAT\": 602.59, \"REU\": 572.82, \"ROU\": 240.58, \"RUS\": 436.28, \"RWA\": 316.33, \"KNA\": 636.36, \"LCA\": 666.67, \"SPM\": 600, \"VCT\": 529.41, \"WSM\": 473.68, \"STP\": 642.86, \"SAU\": 706.79, \"SEN\": 511.6, \"SRB\": 636.06, \"SYC\": 564.52, \"SLE\": 50, \"SGP\": 474, \"SVK\": 116.77, \"SVN\": 231.28, \"SLB\": 700, \"SOM\": 578.95, \"ZAF\": 729.67, \"KOR\": 441.65, \"SSD\": 629.03, \"ESP\": 174.05, \"LKA\": 509.78, \"SDN\": 263.16, \"SUR\": 349.28, \"SWE\": 40.7, \"CHE\": 34.84, \"SYR\": 701.66, \"TWN\": 639.53, \"TJK\": 116.86, \"TZA\": 339.25, \"THA\": 560.74, \"PHL\": 601.1, \"TGO\": 443.18, \"TON\": 625, \"TTO\": 681.53, \"TUN\": 564.62, \"TUR\": 464.59, \"TKM\": 1306.03, \"TCA\": 653.85, \"UGA\": 44.53, \"UKR\": 259.69, \"ARE\": 561.14, \"GBR\": 237.59, \"USA\": 385.98, \"URY\": 112.65, \"UZB\": 1167.6, \"VUT\": 571.43, \"VEN\": 185.8, \"VNM\": 409.8, \"VGB\": 647.06, \"VIR\": 632.35, \"WORLD\": 485.99, \"YEM\": 566.1, \"ZMB\": 111.97, \"ZWE\": 297.87 };\nconst type = \"average\";\nvar average_intensities_min_default = { data, type };\nexport {\n  data,\n  average_intensities_min_default as default,\n  type\n};\n","import fileSize from \"./file-size.js\";\nimport averageIntensity from \"../data/average-intensities.min.js\";\nconst KWH_PER_GB = 0.81;\nconst END_USER_DEVICE_ENERGY = 0.52;\nconst NETWORK_ENERGY = 0.14;\nconst DATACENTER_ENERGY = 0.15;\nconst PRODUCTION_ENERGY = 0.19;\nconst GLOBAL_GRID_INTENSITY = averageIntensity.data[\"WORLD\"];\nconst RENEWABLES_GRID_INTENSITY = 50;\nconst FIRST_TIME_VIEWING_PERCENTAGE = 0.75;\nconst RETURNING_VISITOR_PERCENTAGE = 0.25;\nconst PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD = 0.02;\nexport {\n  DATACENTER_ENERGY,\n  END_USER_DEVICE_ENERGY,\n  FIRST_TIME_VIEWING_PERCENTAGE,\n  GLOBAL_GRID_INTENSITY,\n  KWH_PER_GB,\n  NETWORK_ENERGY,\n  PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD,\n  PRODUCTION_ENERGY,\n  RENEWABLES_GRID_INTENSITY,\n  RETURNING_VISITOR_PERCENTAGE,\n  fileSize\n};\n","import { averageIntensity } from \"../index.js\";\nimport {\n  GLOBAL_GRID_INTENSITY,\n  PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD,\n  FIRST_TIME_VIEWING_PERCENTAGE,\n  RETURNING_VISITOR_PERCENTAGE\n} from \"../constants/index.js\";\nconst formatNumber = (num) => parseFloat(num.toFixed(2));\nfunction parseOptions(options) {\n  var _a, _b, _c, _d, _e, _f;\n  if (typeof options !== \"object\") {\n    throw new Error(\"Options must be an object\");\n  }\n  const adjustments = {};\n  if (options == null ? void 0 : options.gridIntensity) {\n    adjustments.gridIntensity = {};\n    const { device, dataCenter, network } = options.gridIntensity;\n    if (device || device === 0) {\n      if (typeof device === \"object\") {\n        if (!averageIntensity.data[(_a = device.country) == null ? void 0 : _a.toUpperCase()]) {\n          console.warn(`\"${device.country}\" is not a valid country. Please use a valid 3 digit ISO 3166 country code. \nSee https://developers.thegreenwebfoundation.org/co2js/data/ for more information. \nFalling back to global average grid intensity.`);\n          adjustments.gridIntensity[\"device\"] = {\n            value: GLOBAL_GRID_INTENSITY\n          };\n        }\n        adjustments.gridIntensity[\"device\"] = {\n          country: device.country,\n          value: parseFloat(averageIntensity.data[(_b = device.country) == null ? void 0 : _b.toUpperCase()])\n        };\n      } else if (typeof device === \"number\") {\n        adjustments.gridIntensity[\"device\"] = {\n          value: device\n        };\n      } else {\n        adjustments.gridIntensity[\"device\"] = {\n          value: GLOBAL_GRID_INTENSITY\n        };\n        console.warn(`The device grid intensity must be a number or an object. You passed in a ${typeof device}. \nFalling back to global average grid intensity.`);\n      }\n    }\n    if (dataCenter || dataCenter === 0) {\n      if (typeof dataCenter === \"object\") {\n        if (!averageIntensity.data[(_c = dataCenter.country) == null ? void 0 : _c.toUpperCase()]) {\n          console.warn(`\"${dataCenter.country}\" is not a valid country. Please use a valid 3 digit ISO 3166 country code. \nSee https://developers.thegreenwebfoundation.org/co2js/data/ for more information.  \nFalling back to global average grid intensity.`);\n          adjustments.gridIntensity[\"dataCenter\"] = {\n            value: GLOBAL_GRID_INTENSITY\n          };\n        }\n        adjustments.gridIntensity[\"dataCenter\"] = {\n          country: dataCenter.country,\n          value: parseFloat(averageIntensity.data[(_d = dataCenter.country) == null ? void 0 : _d.toUpperCase()])\n        };\n      } else if (typeof dataCenter === \"number\") {\n        adjustments.gridIntensity[\"dataCenter\"] = {\n          value: dataCenter\n        };\n      } else {\n        adjustments.gridIntensity[\"dataCenter\"] = {\n          value: GLOBAL_GRID_INTENSITY\n        };\n        console.warn(`The data center grid intensity must be a number or an object. You passed in a ${typeof dataCenter}. \nFalling back to global average grid intensity.`);\n      }\n    }\n    if (network || network === 0) {\n      if (typeof network === \"object\") {\n        if (!averageIntensity.data[(_e = network.country) == null ? void 0 : _e.toUpperCase()]) {\n          console.warn(`\"${network.country}\" is not a valid country. Please use a valid 3 digit ISO 3166 country code. \nSee https://developers.thegreenwebfoundation.org/co2js/data/ for more information.  Falling back to global average grid intensity. \nFalling back to global average grid intensity.`);\n          adjustments.gridIntensity[\"network\"] = {\n            value: GLOBAL_GRID_INTENSITY\n          };\n        }\n        adjustments.gridIntensity[\"network\"] = {\n          country: network.country,\n          value: parseFloat(averageIntensity.data[(_f = network.country) == null ? void 0 : _f.toUpperCase()])\n        };\n      } else if (typeof network === \"number\") {\n        adjustments.gridIntensity[\"network\"] = {\n          value: network\n        };\n      } else {\n        adjustments.gridIntensity[\"network\"] = {\n          value: GLOBAL_GRID_INTENSITY\n        };\n        console.warn(`The network grid intensity must be a number or an object. You passed in a ${typeof network}. \nFalling back to global average grid intensity.`);\n      }\n    }\n  }\n  if ((options == null ? void 0 : options.dataReloadRatio) || options.dataReloadRatio === 0) {\n    if (typeof options.dataReloadRatio === \"number\") {\n      if (options.dataReloadRatio >= 0 && options.dataReloadRatio <= 1) {\n        adjustments.dataReloadRatio = options.dataReloadRatio;\n      } else {\n        adjustments.dataReloadRatio = PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD;\n        console.warn(`The dataReloadRatio option must be a number between 0 and 1. You passed in ${options.dataReloadRatio}. \nFalling back to default value.`);\n      }\n    } else {\n      adjustments.dataReloadRatio = PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD;\n      console.warn(`The dataReloadRatio option must be a number. You passed in a ${typeof options.dataReloadRatio}. \nFalling back to default value.`);\n    }\n  }\n  if ((options == null ? void 0 : options.firstVisitPercentage) || options.firstVisitPercentage === 0) {\n    if (typeof options.firstVisitPercentage === \"number\") {\n      if (options.firstVisitPercentage >= 0 && options.firstVisitPercentage <= 1) {\n        adjustments.firstVisitPercentage = options.firstVisitPercentage;\n      } else {\n        adjustments.firstVisitPercentage = FIRST_TIME_VIEWING_PERCENTAGE;\n        console.warn(`The firstVisitPercentage option must be a number between 0 and 1. You passed in ${options.firstVisitPercentage}. \nFalling back to default value.`);\n      }\n    } else {\n      adjustments.firstVisitPercentage = FIRST_TIME_VIEWING_PERCENTAGE;\n      console.warn(`The firstVisitPercentage option must be a number. You passed in a ${typeof options.firstVisitPercentage}. \nFalling back to default value.`);\n    }\n  }\n  if ((options == null ? void 0 : options.returnVisitPercentage) || options.returnVisitPercentage === 0) {\n    if (typeof options.returnVisitPercentage === \"number\") {\n      if (options.returnVisitPercentage >= 0 && options.returnVisitPercentage <= 1) {\n        adjustments.returnVisitPercentage = options.returnVisitPercentage;\n      } else {\n        adjustments.returnVisitPercentage = RETURNING_VISITOR_PERCENTAGE;\n        console.warn(`The returnVisitPercentage option must be a number between 0 and 1. You passed in ${options.returnVisitPercentage}. \nFalling back to default value.`);\n      }\n    } else {\n      adjustments.returnVisitPercentage = RETURNING_VISITOR_PERCENTAGE;\n      console.warn(`The returnVisitPercentage option must be a number. You passed in a ${typeof options.returnVisitPercentage}. \nFalling back to default value.`);\n    }\n  }\n  return adjustments;\n}\nfunction getApiRequestHeaders(comment = \"\") {\n  return { \"User-Agent\": `co2js/${\"0.15.0\"} ${comment}` };\n}\nexport {\n  formatNumber,\n  getApiRequestHeaders,\n  parseOptions\n};\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nimport {\n  fileSize,\n  KWH_PER_GB,\n  END_USER_DEVICE_ENERGY,\n  NETWORK_ENERGY,\n  DATACENTER_ENERGY,\n  PRODUCTION_ENERGY,\n  GLOBAL_GRID_INTENSITY,\n  RENEWABLES_GRID_INTENSITY,\n  FIRST_TIME_VIEWING_PERCENTAGE,\n  RETURNING_VISITOR_PERCENTAGE,\n  PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD\n} from \"./constants/index.js\";\nimport { formatNumber } from \"./helpers/index.js\";\nclass SustainableWebDesign {\n  constructor(options) {\n    this.options = options;\n  }\n  energyPerByteByComponent(bytes) {\n    const transferedBytesToGb = bytes / fileSize.GIGABYTE;\n    const energyUsage = transferedBytesToGb * KWH_PER_GB;\n    return {\n      consumerDeviceEnergy: energyUsage * END_USER_DEVICE_ENERGY,\n      networkEnergy: energyUsage * NETWORK_ENERGY,\n      productionEnergy: energyUsage * PRODUCTION_ENERGY,\n      dataCenterEnergy: energyUsage * DATACENTER_ENERGY\n    };\n  }\n  co2byComponent(energyByComponent, carbonIntensity = GLOBAL_GRID_INTENSITY, options = {}) {\n    let deviceCarbonIntensity = GLOBAL_GRID_INTENSITY;\n    let networkCarbonIntensity = GLOBAL_GRID_INTENSITY;\n    let dataCenterCarbonIntensity = GLOBAL_GRID_INTENSITY;\n    let globalEmissions = GLOBAL_GRID_INTENSITY;\n    if (options == null ? void 0 : options.gridIntensity) {\n      const { device, network, dataCenter } = options.gridIntensity;\n      if ((device == null ? void 0 : device.value) || (device == null ? void 0 : device.value) === 0) {\n        deviceCarbonIntensity = device.value;\n      }\n      if ((network == null ? void 0 : network.value) || (network == null ? void 0 : network.value) === 0) {\n        networkCarbonIntensity = network.value;\n      }\n      if ((dataCenter == null ? void 0 : dataCenter.value) || (dataCenter == null ? void 0 : dataCenter.value) === 0) {\n        dataCenterCarbonIntensity = dataCenter.value;\n      }\n    }\n    if (carbonIntensity === true) {\n      dataCenterCarbonIntensity = RENEWABLES_GRID_INTENSITY;\n    }\n    const returnCO2ByComponent = {};\n    for (const [key, value] of Object.entries(energyByComponent)) {\n      if (key.startsWith(\"dataCenterEnergy\")) {\n        returnCO2ByComponent[key.replace(\"Energy\", \"CO2\")] = value * dataCenterCarbonIntensity;\n      } else if (key.startsWith(\"consumerDeviceEnergy\")) {\n        returnCO2ByComponent[key.replace(\"Energy\", \"CO2\")] = value * deviceCarbonIntensity;\n      } else if (key.startsWith(\"networkEnergy\")) {\n        returnCO2ByComponent[key.replace(\"Energy\", \"CO2\")] = value * networkCarbonIntensity;\n      } else {\n        returnCO2ByComponent[key.replace(\"Energy\", \"CO2\")] = value * globalEmissions;\n      }\n    }\n    return returnCO2ByComponent;\n  }\n  perByte(bytes, carbonIntensity = false, segmentResults = false, options = {}) {\n    if (bytes < 1) {\n      bytes = 0;\n    }\n    const energyBycomponent = this.energyPerByteByComponent(bytes, options);\n    if (typeof carbonIntensity !== \"boolean\") {\n      throw new Error(`perByte expects a boolean for the carbon intensity value. Received: ${carbonIntensity}`);\n    }\n    const co2ValuesbyComponent = this.co2byComponent(energyBycomponent, carbonIntensity, options);\n    const co2Values = Object.values(co2ValuesbyComponent);\n    const co2ValuesSum = co2Values.reduce((prevValue, currentValue) => prevValue + currentValue);\n    if (segmentResults) {\n      return __spreadProps(__spreadValues({}, co2ValuesbyComponent), { total: co2ValuesSum });\n    }\n    return co2ValuesSum;\n  }\n  perVisit(bytes, carbonIntensity = false, segmentResults = false, options = {}) {\n    const energyBycomponent = this.energyPerVisitByComponent(bytes, options);\n    if (typeof carbonIntensity !== \"boolean\") {\n      throw new Error(`perVisit expects a boolean for the carbon intensity value. Received: ${carbonIntensity}`);\n    }\n    const co2ValuesbyComponent = this.co2byComponent(energyBycomponent, carbonIntensity, options);\n    const co2Values = Object.values(co2ValuesbyComponent);\n    const co2ValuesSum = co2Values.reduce((prevValue, currentValue) => prevValue + currentValue);\n    if (segmentResults) {\n      return __spreadProps(__spreadValues({}, co2ValuesbyComponent), { total: co2ValuesSum });\n    }\n    return co2ValuesSum;\n  }\n  energyPerByte(bytes) {\n    const energyByComponent = this.energyPerByteByComponent(bytes);\n    const energyValues = Object.values(energyByComponent);\n    return energyValues.reduce((prevValue, currentValue) => prevValue + currentValue);\n  }\n  energyPerVisitByComponent(bytes, options = {}, firstView = FIRST_TIME_VIEWING_PERCENTAGE, returnView = RETURNING_VISITOR_PERCENTAGE, dataReloadRatio = PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD) {\n    if (options.dataReloadRatio || options.dataReloadRatio === 0) {\n      dataReloadRatio = options.dataReloadRatio;\n    }\n    if (options.firstVisitPercentage || options.firstVisitPercentage === 0) {\n      firstView = options.firstVisitPercentage;\n    }\n    if (options.returnVisitPercentage || options.returnVisitPercentage === 0) {\n      returnView = options.returnVisitPercentage;\n    }\n    const energyBycomponent = this.energyPerByteByComponent(bytes);\n    const cacheAdjustedSegmentEnergy = {};\n    const energyValues = Object.values(energyBycomponent);\n    for (const [key, value] of Object.entries(energyBycomponent)) {\n      cacheAdjustedSegmentEnergy[`${key} - first`] = value * firstView;\n      cacheAdjustedSegmentEnergy[`${key} - subsequent`] = value * returnView * dataReloadRatio;\n    }\n    return cacheAdjustedSegmentEnergy;\n  }\n  energyPerVisit(bytes) {\n    let firstVisits = 0;\n    let subsequentVisits = 0;\n    const energyBycomponent = Object.entries(this.energyPerVisitByComponent(bytes));\n    for (const [key, val] of energyBycomponent) {\n      if (key.indexOf(\"first\") > 0) {\n        firstVisits += val;\n      }\n    }\n    for (const [key, val] of energyBycomponent) {\n      if (key.indexOf(\"subsequent\") > 0) {\n        subsequentVisits += val;\n      }\n    }\n    return firstVisits + subsequentVisits;\n  }\n  emissionsPerVisitInGrams(energyPerVisit, carbonintensity = GLOBAL_GRID_INTENSITY) {\n    return formatNumber(energyPerVisit * carbonintensity);\n  }\n  annualEnergyInKwh(energyPerVisit, monthlyVisitors = 1e3) {\n    return energyPerVisit * monthlyVisitors * 12;\n  }\n  annualEmissionsInGrams(co2grams, monthlyVisitors = 1e3) {\n    return co2grams * monthlyVisitors * 12;\n  }\n  annualSegmentEnergy(annualEnergy) {\n    return {\n      consumerDeviceEnergy: formatNumber(annualEnergy * END_USER_DEVICE_ENERGY),\n      networkEnergy: formatNumber(annualEnergy * NETWORK_ENERGY),\n      dataCenterEnergy: formatNumber(annualEnergy * DATACENTER_ENERGY),\n      productionEnergy: formatNumber(annualEnergy * PRODUCTION_ENERGY)\n    };\n  }\n}\nvar sustainable_web_design_default = SustainableWebDesign;\nexport {\n  SustainableWebDesign,\n  sustainable_web_design_default as default\n};\n","\"use strict\";\nimport OneByte from \"./1byte.js\";\nimport SustainableWebDesign from \"./sustainable-web-design.js\";\nimport {\n  GLOBAL_GRID_INTENSITY,\n  RENEWABLES_GRID_INTENSITY\n} from \"./constants/index.js\";\nimport { parseOptions } from \"./helpers/index.js\";\nclass CO2 {\n  constructor(options) {\n    this.model = new SustainableWebDesign();\n    if ((options == null ? void 0 : options.model) === \"1byte\") {\n      this.model = new OneByte();\n    } else if ((options == null ? void 0 : options.model) === \"swd\") {\n      this.model = new SustainableWebDesign();\n    } else if (options == null ? void 0 : options.model) {\n      throw new Error(`\"${options.model}\" is not a valid model. Please use \"1byte\" for the OneByte model, and \"swd\" for the Sustainable Web Design model.\nSee https://developers.thegreenwebfoundation.org/co2js/models/ to learn more about the models available in CO2.js.`);\n    }\n    this._segment = (options == null ? void 0 : options.results) === \"segment\";\n  }\n  perByte(bytes, green = false) {\n    return this.model.perByte(bytes, green, this._segment);\n  }\n  perVisit(bytes, green = false) {\n    var _a;\n    if ((_a = this.model) == null ? void 0 : _a.perVisit) {\n      return this.model.perVisit(bytes, green, this._segment);\n    } else {\n      throw new Error(`The perVisit() method is not supported in the model you are using. Try using perByte() instead.\nSee https://developers.thegreenwebfoundation.org/co2js/methods/ to learn more about the methods available in CO2.js.`);\n    }\n  }\n  perByteTrace(bytes, green = false, options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i;\n    let adjustments = {};\n    if (options) {\n      adjustments = parseOptions(options);\n    }\n    return {\n      co2: this.model.perByte(bytes, green, this._segment, adjustments),\n      green,\n      variables: {\n        description: \"Below are the variables used to calculate this CO2 estimate.\",\n        bytes,\n        gridIntensity: {\n          description: \"The grid intensity (grams per kilowatt-hour) used to calculate this CO2 estimate.\",\n          network: (_c = (_b = (_a = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _a.network) == null ? void 0 : _b.value) != null ? _c : GLOBAL_GRID_INTENSITY,\n          dataCenter: green ? RENEWABLES_GRID_INTENSITY : (_f = (_e = (_d = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _d.dataCenter) == null ? void 0 : _e.value) != null ? _f : GLOBAL_GRID_INTENSITY,\n          production: GLOBAL_GRID_INTENSITY,\n          device: (_i = (_h = (_g = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _g.device) == null ? void 0 : _h.value) != null ? _i : GLOBAL_GRID_INTENSITY\n        }\n      }\n    };\n  }\n  perVisitTrace(bytes, green = false, options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m;\n    if ((_a = this.model) == null ? void 0 : _a.perVisit) {\n      let adjustments = {};\n      if (options) {\n        adjustments = parseOptions(options);\n      }\n      return {\n        co2: this.model.perVisit(bytes, green, this._segment, adjustments),\n        green,\n        variables: {\n          description: \"Below are the variables used to calculate this CO2 estimate.\",\n          bytes,\n          gridIntensity: {\n            description: \"The grid intensity (grams per kilowatt-hour) used to calculate this CO2 estimate.\",\n            network: (_d = (_c = (_b = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _b.network) == null ? void 0 : _c.value) != null ? _d : GLOBAL_GRID_INTENSITY,\n            dataCenter: green ? RENEWABLES_GRID_INTENSITY : (_g = (_f = (_e = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _e.dataCenter) == null ? void 0 : _f.value) != null ? _g : GLOBAL_GRID_INTENSITY,\n            production: GLOBAL_GRID_INTENSITY,\n            device: (_j = (_i = (_h = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _h.device) == null ? void 0 : _i.value) != null ? _j : GLOBAL_GRID_INTENSITY\n          },\n          dataReloadRatio: (_k = adjustments == null ? void 0 : adjustments.dataReloadRatio) != null ? _k : 0.02,\n          firstVisitPercentage: (_l = adjustments == null ? void 0 : adjustments.firstVisitPercentage) != null ? _l : 0.75,\n          returnVisitPercentage: (_m = adjustments == null ? void 0 : adjustments.returnVisitPercentage) != null ? _m : 0.25\n        }\n      };\n    } else {\n      throw new Error(`The perVisitDetailed() method is not supported in the model you are using. Try using perByte() instead.\nSee https://developers.thegreenwebfoundation.org/co2js/methods/ to learn more about the methods available in CO2.js.`);\n    }\n  }\n}\nvar co2_default = CO2;\nexport {\n  CO2,\n  co2_default as default\n};\n","\"use strict\";\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar require_hosting_json = __commonJS({\n  \"src/hosting-json.js\"(exports, module) {\n    async function check(domain, db) {\n      if (typeof domain === \"string\") {\n        return checkInJSON(domain, db);\n      } else {\n        return checkDomainsInJSON(domain, db);\n      }\n    }\n    function checkInJSON(domain, db) {\n      if (db.indexOf(domain) > -1) {\n        return true;\n      }\n      return false;\n    }\n    function greenDomainsFromResults(greenResults) {\n      const entries = Object.entries(greenResults);\n      const greenEntries = entries.filter(([key, val]) => val.green);\n      return greenEntries.map(([key, val]) => val.url);\n    }\n    function checkDomainsInJSON(domains, db) {\n      let greenDomains = [];\n      for (let domain of domains) {\n        if (db.indexOf(domain) > -1) {\n          greenDomains.push(domain);\n        }\n      }\n      return greenDomains;\n    }\n    function find(domain, db) {\n      if (typeof domain === \"string\") {\n        return findInJSON(domain, db);\n      } else {\n        return findDomainsInJSON(domain, db);\n      }\n    }\n    function findInJSON(domain, db) {\n      if (db.indexOf(domain) > -1) {\n        return domain;\n      }\n      return {\n        url: domain,\n        green: false\n      };\n    }\n    function findDomainsInJSON(domains, db) {\n      const result = {};\n      for (let domain of domains) {\n        result[domain] = findInJSON(domain, db);\n      }\n      return result;\n    }\n    module.exports = {\n      check,\n      greenDomainsFromResults,\n      find\n    };\n  }\n});\nexport default require_hosting_json();\n","\"use strict\";\nimport { getApiRequestHeaders } from \"./helpers/index.js\";\nimport hostingJSON from \"./hosting-json.js\";\nfunction check(domain, optionsOrAgentId) {\n  const options = typeof optionsOrAgentId === \"string\" ? { userAgentIdentifier: optionsOrAgentId } : optionsOrAgentId;\n  if ((options == null ? void 0 : options.db) && options.verbose) {\n    throw new Error(\"verbose mode cannot be used with a local lookup database\");\n  }\n  if (typeof domain === \"string\") {\n    return checkAgainstAPI(domain, options);\n  } else {\n    return checkDomainsAgainstAPI(domain, options);\n  }\n}\nasync function checkAgainstAPI(domain, options = {}) {\n  const req = await fetch(`https://api.thegreenwebfoundation.org/greencheck/${domain}`, {\n    headers: getApiRequestHeaders(options.userAgentIdentifier)\n  });\n  if (options == null ? void 0 : options.db) {\n    return hostingJSON.check(domain, options.db);\n  }\n  const res = await req.json();\n  return options.verbose ? res : res.green;\n}\nasync function checkDomainsAgainstAPI(domains, options = {}) {\n  try {\n    const apiPath = \"https://api.thegreenwebfoundation.org/v2/greencheckmulti\";\n    const domainsString = JSON.stringify(domains);\n    const req = await fetch(`${apiPath}/${domainsString}`, {\n      headers: getApiRequestHeaders(options.userAgentIdentifier)\n    });\n    const allGreenCheckResults = await req.json();\n    return options.verbose ? allGreenCheckResults : greenDomainsFromResults(allGreenCheckResults);\n  } catch (e) {\n    return options.verbose ? {} : [];\n  }\n}\nfunction greenDomainsFromResults(greenResults) {\n  const entries = Object.entries(greenResults);\n  const greenEntries = entries.filter(([key, val]) => val.green);\n  return greenEntries.map(([key, val]) => val.url);\n}\nvar hosting_api_default = {\n  check\n};\nexport {\n  hosting_api_default as default\n};\n","\"use strict\";\nimport hostingAPI from \"./hosting-api.js\";\nfunction check(domain, optionsOrAgentId) {\n  return hostingAPI.check(domain, optionsOrAgentId);\n}\nvar hosting_default = {\n  check\n};\nexport {\n  hosting_default as default\n};\n","/**\n * Return an estimate of the carbon emissions produced by a page view.\n * @link https://developers.thegreenwebfoundation.org/co2js/overview/\n */\n\nimport { co2, hosting, averageIntensity } from '@tgwf/co2';\n\n(() => {\n\n  window.addEventListener('load', () => {\n\n    /**\n     * Check whether the current domain is served from a green web host.\n     * https://developers.thegreenwebfoundation.org/co2js/tutorials/check-hosting/\n     */\n\n    const domain = window.location.hostname;\n    hosting.check(domain, {\n      verbose: false\n    }).then((result) => {\n\n      const isGreenHost = result;\n      const emissions = new co2({\n        model: 'swd'\n      });\n\n      /**\n       * 1. Get average grid intensity data for all countries.\n       * 2. Set the country in which the hosting server is located.\n       * 3. Use average grid intensity data for the origin country.\n       */\n\n      const { data } = averageIntensity; /* 1 */\n      const origin = data.BEL; /* 2 */\n      const options = {\n        gridIntensity: {\n          dataCenter: origin /* 3 */\n        }\n      };\n\n      /**\n       * Iterate the array of `PerformanceEntry` objects and calculate the total\n       * number of transferred bytes.\n       * @link https://developer.mozilla.org/en-US/docs/Web/API/Performance/getEntries\n       */\n\n      let transferredBytes = 0;\n      let results = [];\n\n      let entries = performance.getEntries();\n      entries = entries.filter(entry => 'transferSize' in entry);\n\n      entries.forEach((entry) => {\n        transferredBytes = parseInt(transferredBytes + entry.transferSize);\n        results.push({\n          name: entry.name,\n          transferSize: entry.transferSize\n        });\n      });\n\n      results.sort((a, b) => b.transferSize - a.transferSize);\n\n      /**\n       * Estimate carbon emissions for the current page view.\n       */\n\n      const estimate = emissions.perVisitTrace(transferredBytes, isGreenHost, options);\n      const grams = estimate.co2.toFixed(3);\n\n      /**\n       * Define carbon rating scale.\n       * @link https://www.websitecarbon.com/introducing-the-website-carbon-rating-system/\n       */\n\n      const thresholds = {\n        \"A+\": 0.095,\n        \"A\": 0.186,\n        \"B\": 0.341,\n        \"C\": 0.493,\n        \"D\": 0.656,\n        \"E\": 0.846,\n        \"F\": Infinity\n      };\n\n      const scale = Object.entries(thresholds)\n        .map(([grade, threshold]) => ({ grade, threshold }))\n        .sort((a, b) => a.threshold - b.threshold);\n\n      /**\n       * Return the carbon rating for the current page and log the result in the\n       * console.\n       */\n\n      const getRating = (grams) => {\n        let result = scale.find(({ grade, threshold }) => (grams <= threshold));\n        return result.grade;\n      };\n\n      const notice = `${results.length} requests emitted an estimated ${grams} grams of CO2 for a carbon rating of ${getRating(grams)}. ${transferredBytes} bytes were transferred.`;\n      console.log(notice);\n    });\n  });\n})();\n"],"names":["KWH_PER_BYTE_IN_DC","KWH_PER_BYTE_FOR_NETWORK","byte_default","constructor","options","this","perByte","bytes","green","file_size_default","average_intensities_min_default","data","AFG","AFRICA","ALB","DZA","ASM","AGO","ATG","ARG","ARM","ABW","ASEAN","ASIA","AUS","AUT","AZE","BHS","BHR","BGD","BRB","BLR","BEL","BLZ","BEN","BTN","BOL","BIH","BWA","BRA","BRN","BGR","BFA","BDI","CPV","KHM","CMR","CAN","CYM","CAF","TCD","CHL","CHN","COL","COM","COG","COD","COK","CRI","CIV","HRV","CUB","CYP","CZE","DNK","DJI","DMA","DOM","ECU","EGY","SLV","GNQ","ERI","EST","SWZ","ETH","EU","EUROPE","FLK","FRO","FJI","FIN","FRA","GUF","PYF","G20","G7","GAB","GMB","GEO","DEU","GHA","GRC","GRL","GRD","GLP","GUM","GTM","GIN","GNB","GUY","HTI","HND","HKG","HUN","ISL","IND","IDN","IRN","IRQ","IRL","ISR","ITA","JAM","JPN","JOR","KAZ","KEN","KIR","XKX","KWT","KGZ","LAO","LVA","LBN","LSO","LBR","LBY","LTU","LUX","MAC","MDG","MWI","MYS","MDV","MLI","MLT","MTQ","MRT","MUS","MEX","MDA","MNG","MNE","MSR","MAR","MOZ","MMR","NAM","NRU","NPL","NLD","NCL","NZL","NIC","NER","NGA","PRK","MKD","NOR","OCEANIA","OECD","OMN","PAK","PSE","PAN","PNG","PRY","PER","POL","PRT","PRI","QAT","REU","ROU","RUS","RWA","KNA","LCA","SPM","VCT","WSM","STP","SAU","SEN","SRB","SYC","SLE","SGP","SVK","SVN","SLB","SOM","ZAF","KOR","SSD","ESP","LKA","SDN","SUR","SWE","CHE","SYR","TWN","TJK","TZA","THA","PHL","TGO","TON","TTO","TUN","TUR","TKM","TCA","UGA","UKR","ARE","GBR","USA","URY","UZB","VUT","VEN","VNM","VGB","VIR","WORLD","YEM","ZMB","ZWE","type","GLOBAL_GRID_INTENSITY","averageIntensity","FIRST_TIME_VIEWING_PERCENTAGE","RETURNING_VISITOR_PERCENTAGE","PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD","formatNumber","num","parseFloat","toFixed","parseOptions","_a","_b","_c","_d","_e","_f","Error","adjustments","gridIntensity","device","dataCenter","network","country","toUpperCase","console","warn","value","dataReloadRatio","firstVisitPercentage","returnVisitPercentage","getApiRequestHeaders","comment","__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","sustainable_web_design_default","energyPerByteByComponent","energyUsage","fileSize","consumerDeviceEnergy","networkEnergy","productionEnergy","dataCenterEnergy","co2byComponent","energyByComponent","carbonIntensity","deviceCarbonIntensity","networkCarbonIntensity","dataCenterCarbonIntensity","globalEmissions","returnCO2ByComponent","entries","startsWith","replace","segmentResults","energyBycomponent","co2ValuesbyComponent","co2ValuesSum","values","reduce","prevValue","currentValue","total","perVisit","energyPerVisitByComponent","energyPerByte","firstView","returnView","cacheAdjustedSegmentEnergy","energyPerVisit","firstVisits","subsequentVisits","val","indexOf","emissionsPerVisitInGrams","carbonintensity","annualEnergyInKwh","monthlyVisitors","annualEmissionsInGrams","co2grams","annualSegmentEnergy","annualEnergy","cb","mod","co2_default","model","SustainableWebDesign","OneByte","_segment","results","perByteTrace","_g","_h","_i","co2","variables","description","production","perVisitTrace","_j","_k","_l","_m","__getOwnPropNames","getOwnPropertyNames","hostingJSON","exports","module","findInJSON","domain","db","url","check","async","checkInJSON","domains","greenDomains","push","checkDomainsInJSON","greenDomainsFromResults","greenResults","filter","map","find","result","findDomainsInJSON","hosting_api_default","optionsOrAgentId","userAgentIdentifier","verbose","req","fetch","headers","res","json","checkAgainstAPI","apiPath","domainsString","JSON","stringify","allGreenCheckResults","e","checkDomainsAgainstAPI","hosting_default","hostingAPI","window","addEventListener","location","hostname","hosting","then","isGreenHost","emissions","transferredBytes","performance","getEntries","entry","forEach","parseInt","transferSize","name","sort","grams","thresholds","A","B","C","D","E","F","Infinity","scale","_ref","_ref2","_slicedToArray","grade","threshold","notice","concat","length","_ref3","getRating","log"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}